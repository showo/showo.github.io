<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Django on KNOWs</title>
    <link>https://showo.github.io/tags/django/</link>
    <description>Recent content in Django on KNOWs</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 20 Nov 2018 21:11:46 +0800</lastBuildDate>
    
	<atom:link href="https://showo.github.io/tags/django/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Django实战 1 个人博客</title>
      <link>https://showo.github.io/post/django%E5%AE%9E%E6%88%98-1-%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</link>
      <pubDate>Tue, 20 Nov 2018 21:11:46 +0800</pubDate>
      
      <guid>https://showo.github.io/post/django%E5%AE%9E%E6%88%98-1-%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</guid>
      <description>一·Django实战之简单博客搭建  环境：Django2.1版本，python3.6。Django是以python为语言环境的，所以需要保证计算机上已经安装了python，本文使用的版本如上所示。
 1.1 安装Django  1.1.1 在Windows上安装Django Windows环境下在cmd中输入：pip install django,会安装最新版本。如果需要安装特定的版本，使用pip install django==1.11，语句中‘1.11’是相应的版本型号，目前Django已经更新到2.0版本。
 1.1.2 检查安装是否成功 在cmd中输入python，进入python环境，输入如下内容：
&amp;gt;&amp;gt;&amp;gt; import django &amp;gt;&amp;gt;&amp;gt; django.VERSION  显示响应的版本号，即是安装成功。
 1.1.3 本地使用virtualenv虚拟环境搭建多个不干扰的环境
 安装：pip install virtualenv virtualenvwrapper-win
 设置环境变量；
 使用方法：创建虚拟环境：mkvirtualenv name;删除环境：rmvirtualenv name;工作或切换到相应的环境：workon name；退出终端环境：deactivate；
   1.2 创建项目及应用  1.2.1 创建项目 创建并进入虚拟环境后，新建Django项目，使用&amp;gt;&amp;gt;&amp;gt; django-admin startproject mysite命令(或者是django-admin.py startproject mysite)来创建名为mysite项目。mysite就是自己的项目名称，需要为合法的python包名。
 1.2.2 创建应用app 进入mysite目录下，然后执行以下命令：django-admin.py startapp blog或django-manage.py startapp blog。一般一个项目下有多个app，通用的app也可以在多个项目中使用，与项目名类似的是app name也需要是合法的python包名。
 1.2.3 网站配置 在1.2.2中创建了应用app，但是还没有将应用注册到本项目中，因此暂时不能访问。配置文件就是mysite/setting.py，下面就选择几个目前需要使用的来说明。
 DEBUG:其值为True或False。在本地开发过程中需设置成True，在测试中可以显示详细的错误信息，这被称为‘开发模式’；在上线后，需要设置成False，避免暴露内部信息。</description>
    </item>
    
  </channel>
</rss>